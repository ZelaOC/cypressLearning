{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-09T19:07:20.175Z",
    "end": "2022-08-09T19:07:49.921Z",
    "duration": 29746,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "21be4e84-aa11-4b0b-9494-6bdedf5ee242",
      "title": "",
      "fullFile": "cypress/integration/learingAssertion.js",
      "file": "cypress/integration/learingAssertion.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cdb23150-9770-4a6d-b714-babe22d40d3d",
          "title": "E2E - We learn how to use assertion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "We use excpect or should assertion",
              "fullTitle": "E2E - We learn how to use assertion We use excpect or should assertion",
              "timedOut": null,
              "duration": 29709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\"); //First example, text veryfication.\ncy.get('a[title=\"Contact Us\"]').should(\"contain\", \"Contact us\"); //Second example\ncy.get('a[title=\"Contact Us\"]').then(tab => {\n  expect(tab).to.contain(\"Contact us\");\n}); //Third example, asertion check if geted element not to contain text \"Contact US\"\ncy.get('a[title=\"Contact Us\"]').should(\"not.contain\", \"Contact Us\"); //Fouthr example, asertion check if geted element not to contain text \"Contact US\"\ncy.get('a[title=\"Contact Us\"]').then(getingTab => {\n  expect(getingTab).not.to.contain(\"Contact Ss\");\n}); //Fifth example, if geted element contain expected class\ncy.get(\"#search_query_top\").should(\"have.class\", \"search_query\"); //Sixth example, if geted element contain expected class\ncy.get(\"#search_query_top\").then(getElement => {\n  expect(getElement).to.have.class(\"search_query\");\n}); //Seventh example, if our element is visible\ncy.get(\"#search_query_top\").should(\"be.visible\"); //Eight example, if our element is visible\ncy.get(\"#search_query_top\").then(getSecondElement => {\n  expect(getSecondElement).to.be.visible;\n}); //Ninght example, we check number of geted elements are correct\ncy.get(\"ul.sf-menu\").find(\"li\").should(\"have.length\", 14); //Tenth example, we check number of geted elements are correct\ncy.get(\"ul.sf-menu\").find(\"li\").then(thirdElement => {\n  expect(thirdElement).to.have.length(14);\n}); //Eleventh example, we check if geted css value is correct\ncy.get(\"#search_query_top\").should(\"have.css\", \"line-height\", \"45px\"); //Twelth example, we check if geted css value is correct\ncy.get(\"#search_query_top\").then(getCSS => {\n  expect(getCSS).to.have.css(\"line-height\", \"45px\");\n});",
              "err": {},
              "uuid": "7ba7a754-157d-4851-9506-68ec6dc0fe1c",
              "parentUUID": "cdb23150-9770-4a6d-b714-babe22d40d3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ba7a754-157d-4851-9506-68ec6dc0fe1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29709,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}